from pandas.core.frame import DataFrame
from connect import get, copy_from_file
import pandas as pd
from matplotlib import pyplot as plt
from datetime import timedelta, date


cols = '*'
tbl = 'neg_2015_2016'
tb2 = 'training_158_pos'
modifier = None
where = None
df_neg = get(tbl, cols, where, modifier)
df_pos = get(tb2, cols, where, modifier)


df_neg["assign_date"] = pd.to_datetime(df_neg["assign_date"])
df_neg["cve_publish_date"] = pd.to_datetime(df_neg["cve_publish_date"])


result = []
temp_list = []

for pos in range(len(df_pos)) :
    print(pos)
    pos_date = df_pos.loc[pos, "assign_date"]
    pos_date_publish = df_pos.loc[pos, "cve_publish_date"]

    notFound = True
    for index, row in df_neg.iterrows():
        neg_date = row['assign_date']
        neg_date_publish = row['cve_publish_date']
        
        margin = timedelta(days = 1)
        if (pos_date == neg_date or pos_date - margin <= neg_date <= pos_date + margin):
            if (pos_date_publish == neg_date_publish or pos_date_publish - margin <= neg_date_publish <= pos_date_publish + margin):
                result.append(df_pos.loc[pos])
                result.append(row) # search in row
                df_neg.drop(index=index, axis=0, inplace=True)
                print("done")
                notFound = False
                break
    if notFound:
        temp_list.append(df_pos.loc[pos])
        print("saving")

print("temp size", len(temp_list))

temp_df = pd.DataFrame(temp_list)   
print(temp_df)
#for pos in range(len(temp_df)) :
for index_temp, row_temp in temp_df.iterrows():
    print("Scond try", index_temp)
    pos_date = row_temp["assign_date"]
    pos_date_publish = row_temp["cve_publish_date"]
    
    for index, row in df_neg.iterrows():
        neg_date = row['assign_date']
        neg_date_publish = row['cve_publish_date']

        margin = timedelta(days = 1)
        if (pos_date == neg_date or pos_date - margin <= neg_date <= pos_date + margin):
            margin2 = timedelta(days = 1)
            for i in range(31):
                if (pos_date_publish == neg_date_publish or pos_date_publish - margin2 <= neg_date_publish <= pos_date_publish + margin2):
                    result.append(row_temp)
                    result.append(row) # search in row
                    df_neg.drop(index=index, axis=0, inplace=True)
                    print("2. done")
                    break
                else:
                    margin2 = margin2 + timedelta(days = i+1)
            break

print(len(result))
df = pd.DataFrame(result) 
df.drop_duplicates()
print(df.size)
copy_from_file(df, 'training_set')
