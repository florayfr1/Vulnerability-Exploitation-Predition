from pandas.core.frame import DataFrame
from connect import get, copy_from_file
import pandas as pd
import numpy as np

cols = '*'
tbl1 = 'training_set_dw'
tbl2 = 'testing_set_dw'
modifier = None
where = None
train = get(tbl1, cols, where, modifier) 
test = get(tbl2, cols, where, modifier) 



neg = pd.read_csv('neg_tfidf_description.csv',index_col=False)
pos = pd.read_csv('pos_tfidf_description.csv', index_col=False)

neg = neg.drop('cve_description',axis = 1)
pos = pos.drop('cve_description',axis = 1)

common = 'assign_date,cve_id,cwe_id,\
            cve_publish_date,\
            cvss2_accesscomplexity,\
            cvss2_accessvector,\
            cvss2_authentication,\
            cvss2_availabilityimpact,\
            cvss2_basescore,\
            cvss2_confidentialityimpact,\
            cvss2_exploitabilityscore,\
            cvss2_impactscore,\
            cvss2_integrityimpact,\
            cvss2_obtainallprivilege,\
            cvss2_obtainotherprivilege,\
            cvss2_obtainuserprivilege,\
            cvss2_severity,\
            cvss2_userinteractionrequired,\
            num_of_affected_cpe,\
            num_of_reference,\
            nvd_poc_link,\
            train_label'.strip().replace(" ", "").split(',')

train2 = pd.merge(train, pos, on=common, how='outer')
train2.drop_duplicates(subset=['cve_id'])
train2.fillna(0)

hope = DataFrame()
r = []
for index_temp, row_temp in train.iterrows():
    train_id = row_temp["cve_id"]
    temp = []
    for index, row in train2.iterrows():
        train2_id = row['cve_id']

        if train_id == train2_id:           
            temp.append(row)
            
        if len(temp) >= 2:
            break

    df = pd.DataFrame(temp)
    
    print(df)
    df.head(1).fillna(df.tail(1))
    print("---------------------------")
    print(df)
    r.append(df.head(1))
    
    if index_temp == 3: break

#fdf = pd.DataFrame(r)
#print(fdf)
            
'''pos_id = pos['cve_id'].tolist()
train_columns = train.columns.tolist()
for i in range(len(pos_id)):
    cve = pos_id[i]
    for j in range(len(train_columns)):
        temp = train[train['cve_id'].str.contains(cve, na=False)][train_columns[j]].tolist()
'''

'''train_columns = train.columns.tolist()
pos_columns = pos.columns.tolist()

dict_t = {key: [] for key in pos_columns}

for index, row in train.iterrows():
    for i in range(len(pos)):
        if pos['cve_id'][i]==row['cve_id']:
            for ic in range(len(pos_columns)):
                pos_column = pos_columns[ic] #str

                if pos_column not in train_columns: 
                    dict_t[pos_column].append(pos[pos_column][i])
                    #train[pos_column][index] = pos[pos_column][i]
                else:
                    dict_t.pop(pos_column, None)
        else:

        
            
        #if index ==2: break
print(dict_t)
df = pd.DataFrame.from_dict(dict_t, orient='columns')

for i in dict_t.keys():
    train[i]= df[i]'''
#hope.to_csv('p.csv')
